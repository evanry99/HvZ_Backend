// <auto-generated />
using System;
using HvZ.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HvZ.Migrations
{
    [DbContext(typeof(HvZDbContext))]
    [Migration("20230314135129_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HvZ.Model.Domain.GameDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameState")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double?>("Nw_Lat")
                        .HasColumnType("float");

                    b.Property<double?>("Nw_Lng")
                        .HasColumnType("float");

                    b.Property<double?>("Se_Lat")
                        .HasColumnType("float");

                    b.Property<double?>("Se_Lng")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Human vs Zombie fun",
                            GameState = "Registration",
                            Name = "First Game",
                            Nw_Lat = 40.753,
                            Nw_Lng = 73.983000000000004,
                            StartTime = new DateTime(2023, 3, 14, 14, 51, 29, 82, DateTimeKind.Local).AddTicks(623)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Very fun game join plz!",
                            GameState = "In Progress",
                            Name = "Second Game",
                            Se_Lat = 33.924900000000001,
                            Se_Lng = 18.424099999999999,
                            StartTime = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HvZ.Model.Domain.KillDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("KillerId")
                        .HasColumnType("int");

                    b.Property<double?>("Lat")
                        .HasColumnType("float");

                    b.Property<double?>("Lng")
                        .HasColumnType("float");

                    b.Property<string>("Story")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TimeOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<int>("VictimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("KillerId");

                    b.HasIndex("VictimId");

                    b.ToTable("Kills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            KillerId = 1,
                            Lat = 33.321300000000001,
                            Lng = 24.222999999999999,
                            Story = "Stabbed him very hard",
                            TimeOfDeath = new DateTime(2023, 3, 9, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            VictimId = 2
                        },
                        new
                        {
                            Id = 2,
                            GameId = 2,
                            KillerId = 1,
                            Lat = 23.3828,
                            Lng = 82.992000000000004,
                            Story = "Shot him in the face",
                            TimeOfDeath = new DateTime(2023, 3, 9, 6, 30, 30, 0, DateTimeKind.Unspecified),
                            VictimId = 3
                        });
                });

            modelBuilder.Entity("HvZ.Model.Domain.PlayerDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BiteCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsHuman")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPatientZero")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BiteCode = "231233",
                            GameId = 1,
                            IsHuman = false,
                            IsPatientZero = true,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BiteCode = "112334",
                            GameId = 1,
                            IsHuman = true,
                            IsPatientZero = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BiteCode = "928475",
                            GameId = 2,
                            IsHuman = true,
                            IsPatientZero = false,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("HvZ.Model.Domain.UserDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Håvard",
                            IsAdmin = false,
                            LastName = "Madland"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "An",
                            IsAdmin = false,
                            LastName = "Nguyen"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Vilhelm",
                            IsAdmin = false,
                            LastName = "Assersen"
                        });
                });

            modelBuilder.Entity("HvZ.Model.Domain.KillDomain", b =>
                {
                    b.HasOne("HvZ.Model.Domain.GameDomain", "Game")
                        .WithMany("Kills")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HvZ.Model.Domain.PlayerDomain", "Killer")
                        .WithMany("Kills")
                        .HasForeignKey("KillerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HvZ.Model.Domain.PlayerDomain", "Victim")
                        .WithMany()
                        .HasForeignKey("VictimId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Killer");

                    b.Navigation("Victim");
                });

            modelBuilder.Entity("HvZ.Model.Domain.PlayerDomain", b =>
                {
                    b.HasOne("HvZ.Model.Domain.GameDomain", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HvZ.Model.Domain.UserDomain", "User")
                        .WithMany("Players")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HvZ.Model.Domain.GameDomain", b =>
                {
                    b.Navigation("Kills");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("HvZ.Model.Domain.PlayerDomain", b =>
                {
                    b.Navigation("Kills");
                });

            modelBuilder.Entity("HvZ.Model.Domain.UserDomain", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
